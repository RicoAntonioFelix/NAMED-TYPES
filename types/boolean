// -*- C++ -*-
// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2017 Oslo and Akershus University College of Applied Sciences
// and Alfred Bratterud
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#ifndef INCLUDEOS_BOOLEAN_HPP
#define INCLUDEOS_BOOLEAN_HPP

/**
 * This type is used to represent a named boolean
 *
 * @tparam T
 *   A type(tag) to instantiate a specialized named boolean
 */
template<typename T>
struct boolean_t final {
  /**
   * Constructor
   *
   * @param state
   *    The state of this boolean (true/false)
   */
  constexpr explicit boolean_t(const bool state) noexcept
    : state_{state}
  {}

  /**
   * Operator to coerce this type to a boolean value
   */
  constexpr operator bool() const noexcept
  { return state_; }

  const bool state_; //< The state of the boolean
}; //< struct boolean_t

#endif //< INCLUDEOS_BOOLEAN_HPP
