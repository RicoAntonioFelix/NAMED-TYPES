// -*- C++ -*-
// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2017 Oslo and Akershus University College of Applied Sciences
// and Alfred Bratterud
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#ifndef INCLUDEOS_LONG_DOUBLE_HPP
#define INCLUDEOS_LONG_DOUBLE_HPP

/**
 * This type is used to represent a named long double
 *
 * @tparam T
 *   A type(tag) to instantiate a specialized named long double
 */
template<typename T>
struct long_double_t final {
  /**
   * Constructor
   *
   * @param value
   *    The value for this type to represent
   */
  constexpr explicit long_double_t(const long double value) noexcept
    : value_{value}
  {}

  /**
   * Operator to coerce this type to a long double
   */
  constexpr operator long double() const noexcept
  { return value_; }

  const long double value_; //< The value this type represent
}; //< struct long_double_t

#endif //< INCLUDEOS_LONG_DOUBLE_HPP
